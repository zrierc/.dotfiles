# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4
set $altmod Mod1

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:BerkeleyMono Nerd Font 10

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- ~/.config/i3/i3-lock

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% && \
  dunstify -h int:value:"$(pactl get-sink-volume @DEFAULT_SINK@ | grep front-left | cut -d'/' -f2 | tr -d ' %')" \
  -i ~/.config/dunst/assets/volume.svg -t 500 -r 420 \
  "Volume: $(pactl get-sink-volume @DEFAULT_SINK@ | grep front-left | cut -d'/' -f2 | tr -d ' ')" && \
  $refresh_i3status

bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% && \
  dunstify -h int:value:"$(pactl get-sink-volume @DEFAULT_SINK@ | grep front-left | cut -d'/' -f2 | tr -d ' %')" \
  -i ~/.config/dunst/assets/volume.svg -t 500 -r 420 \
  "Volume: $(pactl get-sink-volume @DEFAULT_SINK@ | grep front-left | cut -d'/' -f2 | tr -d ' ')" && \
  $refresh_i3status

bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && \
  dunstify -i ~/.config/dunst/assets/$(pactl get-sink-mute @DEFAULT_SINK@ | cut -d' ' -f2 | grep -q "yes" && echo "volume-mute.svg" || echo "volume.svg") \
  -t 500 -r 420 "Toggle Mute" && \
  $refresh_i3status

bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && \
  dunstify -i ~/.config/dunst/assets/$(pactl get-source-mute @DEFAULT_SOURCE@ | cut -d' ' -f2 | grep -q "yes" && echo "mic-mute.svg" || echo "mic.svg") \
  -t 500 -r 420 "Microphone" && \
  $refresh_i3status

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec alacritty

# kill focused window
bindsym $mod+q kill

# start dmenu (a program launcher)
# bindsym $mod+d exec --no-startup-id dmenu_run -b
bindsym $mod+space exec --no-startup-id ~/.config/rofi/bin/launcher
# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+z split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $altmod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $altmod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# DISABLED -- Use polybar instead
# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
# bar {
#         position top
#         tray_output primary
#         status_command i3status
# }

#                                      __ _._.,._.__
#                           .o8888888888888888P'
#                         .d88888888888888888K
#           ,8            888888888888888888888boo._
#          :88b           888888888888888888888888888b.
#           `Y8b          88888888888888888888888888888b.
#             `Yb.       d8888888888888888888888888888888b
#               `Yb.___.88888888888888888888888888888888888b
#                 `Y888888888888888888888888888888CG88888P"'
#                   `88888888888888888888888888888MM88P"'
#  "Y888K    "Y8P""Y888888888888888888888888oo._""""
#    88888b    8    8888`Y88888888888888888888888oo.
#    8"Y8888b  8    8888  ,8888888888888888888888888o,
#    8  "Y8888b8    8888""Y8`Y8888888888888888888888b.
#    8    "Y8888    8888   Y  `Y8888888888888888888888
#    8      "Y88    8888     .d `Y88888888888888888888b
#  .d8b.      "8  .d8888b..d88P   `Y88888888888888888888
#                                   `Y88888888888888888b.
#                    "Y888P""Y8b. "Y888888888888888888888
#                      888    888   Y888`Y888888888888888
#                      888   d88P    Y88b `Y8888888888888
#                      888"Y88K"      Y88b dPY8888888888P
#                      888  Y88b       Y88dP  `Y88888888b
#                      888   Y88b       Y8P     `Y8888888
#                    .d888b.  Y88b.      Y        `Y88888
#                                                   `Y88K
#                                                     `Y8
#                                                       '
#      GOD'S IN HIS HEAVEN. ALL'S RIGHT WITH THE WORLD.
################################################################
###                    Custom configuration                  ###
################################################################
focus_follows_mouse no
mouse_warping none

# Trackpad bahaviour: enable touch, natural scrolling, double finger to scroll
exec ~/.local/scripts/touchpad-behaviour.sh

# Applet & launcher
bindsym $mod+Shift+space exec --no-startup-id ~/.config/rofi/bin/launcher --extended
bindsym $mod+Shift+s exec --no-startup-id ~/.config/rofi/bin/screenshot
bindsym $mod+p exec --no-startup-id ~/.config/rofi/bin/powermenu
bindsym $mod+m exec --no-startup-id ~/.config/rofi/bin/display_orientation

# Screen brightness control
bindsym XF86MonBrightnessUp exec --no-startup-id brightnessctl set +5% && \
  dunstify -h int:value:"$(( ($(brightnessctl g) * 100) / $(brightnessctl m) ))" \
  -i ~/.config/dunst/assets/brightness.svg -t 500 -r 420 \
  "Brightness: $(( ($(brightnessctl g) * 100) / $(brightnessctl m) ))%"

bindsym XF86MonBrightnessDown exec --no-startup-id brightnessctl set 5%- && \
  dunstify -h int:value:"$(( ($(brightnessctl g) * 100) / $(brightnessctl m) ))" \
  -i ~/.config/dunst/assets/brightness.svg -t 500 -r 420 \
  "Brightness: $(( ($(brightnessctl g) * 100) / $(brightnessctl m) ))%"

# lauch polybar
exec ~/.config/polybar/launch.sh --ver1

# set wallpaper
exec --no-startup-id feh --bg-fill ~/Pictures/wallpaper/gh0stzk/wall-17.webp

## border radius
default_border none
default_floating_border none
exec --no-startup-id picom -b --config ~/.config/picom/picom.conf

## Gaps / margin+padding between windows
smart_gaps inverse_outer
gaps outer 3px
gaps inner 5px

## custom [alt+tab]
bindsym $altmod+Tab focus right
bindsym $altmod+Shift+Tab focus left

workspace_auto_back_and_forth yes
bindsym $mod+Tab workspace next
bindsym $mod+Shift+Tab workspace prev

## dual-monitor setup
workspace $ws1 output primary
workspace $ws2 output nonprimary

## App specific settings
for_window [class="steam"] floating enable
